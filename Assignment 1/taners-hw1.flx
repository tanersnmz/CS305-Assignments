%{
#include <stdio.h>
int day, month, year, hour, minute;
int lineCounter = 1;
int inMultilineComment = 0; 
%}

%{
%}
%%
\n[ \t]* {
    lineCounter++;
}
[ \t]*
Mail {
    if (inMultilineComment == 0) {
        printf("%d_tMAIL\n", lineCounter); 
    }
}

from {
    if (inMultilineComment == 0) {
        printf("%d_tFROM\n", lineCounter); 
    }
}

schedule {
    if (inMultilineComment == 0) {
        printf("%d_tSCHEDULE\n", lineCounter);
    }
}

send {
    if (inMultilineComment == 0) {
        printf("%d_tSEND\n", lineCounter);
    }
}

to {
    if (inMultilineComment == 0) {
        printf("%d_tTO\n", lineCounter);
    }
}

set {
    if (inMultilineComment == 0) {
        printf("%d_tSET\n", lineCounter);
    }
}

end[ \t\n]+Mail {
    if (inMultilineComment == 0) {
        int counter = 0;
        int size = yyleng;      
        int i = 1;
        char encounteredNewline = 0;

        while (i < size) {
            if (yytext[i] == '\n') {
                encounteredNewline = 1;
            } else if (encounteredNewline) {
                counter++;  
                encounteredNewline = 0;  
            }
            i = i + 1;
        }
        if (encounteredNewline) {
            counter++;
        }
        printf("%d_tENDMAIL\n", lineCounter);
        lineCounter = lineCounter + counter;
    }
}


end[ \t\n]+schedule {
    if (inMultilineComment == 0) {
        int counter = 0;
        int size = yyleng;      
        int i = 1;
        char encounteredNewline = 0;

        while (i < size) {
            if (yytext[i] == '\n') {
                encounteredNewline = 1;
            } else if (encounteredNewline) {
                counter++;  
                encounteredNewline = 0;  
            }
            i = i + 1;
        }
        if (encounteredNewline) {
            counter++;
        }
        printf("%d_tENDSCHEDULE\n", lineCounter);
        lineCounter = lineCounter + counter;
    }
}


"," {
    if (inMultilineComment == 0) {
        printf("%d_tCOMMA\n", lineCounter);
    }
}

"(" {
    if (inMultilineComment == 0) {
        printf("%d_tLPR\n", lineCounter);
    }
}

"[" {
    if (inMultilineComment == 0) {
        printf("%d_tLBR\n", lineCounter);
    }
}

"@" {
    if (inMultilineComment == 0) {
        printf("%d_tAT\n", lineCounter);
    }
}

":" {
    if (inMultilineComment == 0) {
        printf("%d_tCOLON\n", lineCounter);
    }
}

")" {
    if (inMultilineComment == 0) {
        printf("%d_tRPR\n", lineCounter);
    }
}

"]" {
    if (inMultilineComment == 0) {
        printf("%d_tRBR\n", lineCounter);
    }
}


"/*" {
    inMultilineComment++;
}


"*/" {
    if (inMultilineComment > 0) {
        inMultilineComment--;
    } else {
        printf("%d_ILLEGAL_CHARACTER_(%s)\n", lineCounter, "*");
        printf("%d_ILLEGAL_CHARACTER_(%s)\n", lineCounter, "/");
    }
}

[a-zA-Z_][a-zA-Z0-9_]* {
    if (inMultilineComment == 0) {
        int counter = 0;
        int size = yyleng;      
        int i = 1;
        while (i < size) {
            if (yytext[i] == '\n') {
                counter++;
            }
            i = i + 1;
        }
        printf("%d_tIDENT_(%s)\n", lineCounter, yytext);
        lineCounter = lineCounter + counter;
    }
}

\"[^"]*\"   {
    if (inMultilineComment == 0) {
        char str[1024];
        strncpy(str, &yytext[1], strlen(yytext) - 2);
        str[strlen(yytext) - 2] = '\0';
        int counter = 0;
        int size = yyleng;      
        int i = 1;
        while (i < size) {
            if (yytext[i] == '\n') {
                counter++;
            }
            i = i + 1;
        }
        printf("%d_tSTRING_(%s)\n", lineCounter, str);
        lineCounter = lineCounter + counter;
    }
}

[a-zA-Z0-9_-]+([.][a-zA-Z0-9_-]+)*@[a-zA-Z0-9]+([-]*[a-zA-Z0-9]+)*[.]{1}[a-zA-Z0-9]+([-]*[a-zA-Z0-9]+)*(.[a-zA-Z0-9]+([-]*[a-zA-Z0-9])*){0,1} {
    if (inMultilineComment == 0) {
        printf("%d_tADDRESS_(%s)\n", lineCounter, yytext);
    }
}

[0-9]{2}"/"[0-9]{2}"/"[0-9]{4} {
    if (inMultilineComment == 0) {
        sscanf(yytext, "%d/%d/%d", &day, &month, &year);
        printf("%d_tDATE_(Day_%02d_Month_%02d_Year_%04d)\n", lineCounter, day, month, year);
    }
}

[0-9]{2}"."[0-9]{2}"."[0-9]{4} {
    if (inMultilineComment == 0) {
        sscanf(yytext, "%d.%d.%d", &day, &month, &year);
        printf("%d_tDATE_(Day_%02d_Month_%02d_Year_%04d)\n", lineCounter, day, month, year);
    }
}

[0-9]{2}"-"[0-9]{2}"-"[0-9]{4} {
    if (inMultilineComment == 0) {
        sscanf(yytext, "%d-%d-%d", &day, &month, &year);
        printf("%d_tDATE_(Day_%02d_Month_%02d_Year_%04d)\n", lineCounter, day, month, year);
    }
}

[0-9]{2}":"[0-9]{2} {
    if (inMultilineComment == 0) {
        sscanf(yytext, "%d:%d", &hour, &minute);
        printf("%d_tTIME_(Hour_%02d_Minute_%02d)\n", lineCounter, hour, minute);
    }
}

"//".*

[^\s] {
    if (inMultilineComment == 0) {
        printf("%d_ILLEGAL_CHARACTER_(%s)\n", lineCounter, yytext);
    }
}
%%
int main() {
    yylex();
    return 0;
}
